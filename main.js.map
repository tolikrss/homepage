{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/qr-code.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./modules/main/main.module\": [\n\t\t\"./src/app/modules/main/main.module.ts\",\n\t\t\"modules-main-main-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'main',\n    loadChildren: './modules/main/main.module#MainModule',\n  },\n  {\n    path: '**',\n    redirectTo: 'main',\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport { QrCodeService } from './services/qr-code.service';\r\n\r\n@Component( {\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [ './app.component.scss' ]\r\n} )\r\nexport class AppComponent {\r\n  title = 'ksai';\r\n\r\n  constructor(\r\n    private _qrCode: QrCodeService,\r\n  ) {\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { QRCodeModule } from 'angularx-qrcode';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\n@NgModule( {\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    QRCodeModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [ AppComponent ]\r\n} )\r\nexport class AppModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport QRCode from 'qrcodejs/qrcode';\r\nimport * as qrCode from 'qrcode';\r\nimport { reject } from 'q';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {map} from \"rxjs/operators\";\r\nimport jsQR from \"jsqr\";\r\n\r\n@Injectable( {\r\n  providedIn: 'root'\r\n} )\r\nexport class QrCodeService {\r\n\r\n  private readonly _readQRApi: string = 'http://api.qrserver.com/v1/read-qr-code/';\r\n\r\n  constructor(\r\n    private _http: HttpClient,\r\n  ) {\r\n    this.generate( 'test' );\r\n  }\r\n\r\n  /**\r\n   * @param info\r\n   *\r\n   * @return {Promise<string>} - Base64 string of QRCode image\r\n   */\r\n  async generate( info: any ): Promise<string> {\r\n    const dataToCode: string = JSON.stringify( info );\r\n\r\n    const result = await qrCode.toDataURL( dataToCode );\r\n\r\n    return result;\r\n  }\r\n\r\n  async parse( imageFile: File ): Promise<any> {\r\n    const base64Img = await this.fileToBase64( imageFile );\r\n\r\n    const imageData: any = await new Promise( resolve => {\r\n      const canvas = document.createElement('canvas');\r\n      const context = canvas.getContext('2d');\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        context.drawImage(img, 0, 0 );\r\n        const _myData = context.getImageData(0, 0, img.width, img.height) as any;\r\n        resolve( _myData );\r\n      };\r\n      img.src = base64Img;\r\n    });\r\n    const temp = jsQR( imageData.data, imageData.width, imageData.height );\r\n    const result = JSON.parse(temp.data);\r\n    // debugger;\r\n\r\n    return result;\r\n\r\n  }\r\n\r\n  private _getDataUri( url ): Promise<string> {\r\n    return new Promise<any>( ( resolve, reject ) => {\r\n      try {\r\n        const image = new Image();\r\n\r\n        image.onload = function () {\r\n          const canvas = document.createElement( 'canvas' ) as any;\r\n\r\n          canvas.width = (<any>this).naturalWidth;\r\n          canvas.height = (<any>this).naturalHeight;\r\n          canvas.getContext( '2d' ).drawImage( this, 0, 0 );\r\n\r\n          const result = canvas.toDataURL( 'image/png' );\r\n\r\n          resolve( result );\r\n        };\r\n\r\n        image.src = url;\r\n      } catch ( err ) {\r\n        reject( 'Can\\'t get image DataURI' );\r\n      }\r\n    } );\r\n  }\r\n\r\n  fileToBase64( file: File ): Promise<string> {\r\n    return new Promise( ( resolve, reject ) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL( file );\r\n      reader.onload = () => resolve( reader.result as string );\r\n      reader.onerror = error => reject( error );\r\n    } );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}